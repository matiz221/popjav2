package calc;

import java.util.concurrent.ThreadLocalRandom;

public class MonteCarloMethod extends Integral {
    private final int n; // liczba pr√≥b

    public MonteCarloMethod(CalculatedFunction function, double lower, double upper, int n) {
        super(function, lower, upper);
        if (n <= 0) throw new IllegalArgumentException("n must be > 0");
        this.n = n;
    }

    @Override
    public double calculate() {
        double a = lower, b = upper;
        double sum = 0.0;
        for (int i = 0; i < n; i++) {
            double x = ThreadLocalRandom.current().nextDouble(a, b);
            sum += function.f(x);
        }
        return (b - a) * (sum / n);
    }
}
